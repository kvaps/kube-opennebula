# Specified timezone should be existing by path
# /usr/share/zoneinfo/<timezone>

timezone:

# ------------------------------------------------------------------------------
# Persistent Volume configuration
# ------------------------------------------------------------------------------

persistence:

  # Volume for OpenNebula Database
  data:
    enabled: false
    accessModes:
    - ReadWriteOnce
    size: 10Gi
    storageClassName: default
    annotations: {}
    finalizers:
    - kubernetes.io/pvc-protection

    # Use existing PVC instead
    existingClaim:

  # OpenNebula Shared volume, used for sharing logs, novnc tokens
  # and as temporary storage for uploading images via Sunstone
  # necessary if you need these features
  shared:
    enabled: false

    accessModes:
    - ReadWriteMany
    size: 10Gi
    storageClassName: default
    annotations: {}
    finalizers:
    - kubernetes.io/pvc-protection

    # Use existing PVC instead
    existingClaim:

# ------------------------------------------------------------------------------
# Main OpenNebula daemon configuration
# ------------------------------------------------------------------------------

oned:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 3

  # Allow to bootsrap new cluster
  createCluster: false

  # Debug settings
  debug: false
  leaderId: -1

  image:
    repository: ghcr.io/kvaps/opennebula
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  # Specify passwords for default accounts
  oneadminPasswd:
  serveradminPasswd:
  oneKey:

  # Specify id_rsa private key for ssh connections
  sshKey:

  port: 2633
  service:
    labels: {}
    annotations: {}
    port: 2633

  # Database configuration
  db:
    extraEnv: []
    extraVolumeMounts: []
    enabled: true
    backend: mysql
    server: 127.0.0.1
    port: 3306
    user: oneadmin
    passwd:
    dbName: opennebula
    connections: 50
    rootPasswd:
    extraArgs:
    - --character-set-server=utf8mb4
    - --collation-server=utf8mb4_unicode_ci
    - --skip-log-bin
    #- --max-connections=150
    #- --innodb-buffer-pool-size=8G
    #- --innodb-buffer-pool-instances=16
    image:
      repository: docker.io/library/mysql
      tag: 8.0.19
      pullPolicy: IfNotPresent

  # Specify nodePort for monitord service (30000-32767)
  # port and nodePort should be the same
  monitord:
    port: 32156 # TODO
    service:
      labels: {}
      annotations: {}
      nodePort: 32156 # TODO
    configOverrides: {}
    configAppends: {}

  # Specify nodePort for one_hm service
  one_hm:
    subscriberPort: 2101
    replierPort: 2102
    service:
      labels: {}
      annotations: {}
      subscriberPort: 2101
      replierPort: 2102

  ingress:
    enabled: true
    labels: {}
    annotations: {}
      #kubernetes.io/ingress.class: nginx
      #kubernetes.io/tls-acme: "true"
    hosts:
    - opennebula.example.org
    tls:
    - secretName: opennebula-tls
      hosts:
      - opennebula.example.org

  configOverrides:
    HOSTNAME: localhost #TODO
    LOG:
      SYSTEM: file
      DEBUG_LEVEL: 3
    RAFT_LEADER_HOOK:
      COMMAND: /scripts/vip.sh
      ARGUMENTS: leader
    RAFT_FOLLOWER_HOOK:
      COMMAND: /scripts/vip.sh
      ARGUMENTS: follower
  configAppends: {}

  # configuration from this section will be mapped to /etc/auth for oned
  # you can specify ldap_auth.conf config here for example
  authConfig: {}

# ------------------------------------------------------------------------------
# OpenNebula scheduler configuration
# ------------------------------------------------------------------------------

sched:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: ghcr.io/kvaps/opennebula
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  configOverrides:
    LOG:
      SYSTEM: std
      DEBUG_LEVEL: 3

# ------------------------------------------------------------------------------
# OneHem server configuration
# ------------------------------------------------------------------------------

hem:
  enabled: true

  # If true, the Hem-server be started on same place with oned by the leader-election hook
  # (workaround for https://github.com/OpenNebula/one/issues/4357)
  integrated: true

  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: ghcr.io/kvaps/opennebula
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  configOverrides:
    :debug_level: 3

# ------------------------------------------------------------------------------
# Sunstone server configuration
# ------------------------------------------------------------------------------

sunstone:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 3

  image:
    repository: ghcr.io/kvaps/opennebula-sunstone
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  port: 9869
  service:
    labels: {}
    annotations: {}
    port: 9869

  ingress:
    enabled: true
    labels: {}
    annotations: {}
      #kubernetes.io/ingress.class: nginx
      #nginx.ingress.kubernetes.io/proxy-body-size: 5000m
      #kubernetes.io/tls-acme: "true"
    hosts:
    - opennebula.example.org
    tls:
    - secretName: opennebula-tls
      hosts:
      - opennebula.example.org

  configOverrides:
    :debug_level: 3
    :vnc_client_port: 443/websockify
    :vnc_proxy_support_wss: only

# ------------------------------------------------------------------------------
# NoVNC server configuration
# ------------------------------------------------------------------------------

novnc:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: ghcr.io/kvaps/opennebula-sunstone
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}


  port: 29876
  service:
    labels: {}
    annotations: {}
    port: 29876

  ingress:
    enabled: true
    labels: {}
    annotations: {}
      #kubernetes.io/ingress.class: nginx
      #kubernetes.io/tls-acme: "true"
    hosts:
    - opennebula.example.org
    tls:
    - secretName: opennebula-tls
      hosts:
      - opennebula.example.org

  configOverrides:
    :debug_level: 3

# ------------------------------------------------------------------------------
# Memcached server configuration
# ------------------------------------------------------------------------------

memcached:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: docker.io/library/memcached
    tag: 1.5.6-alpine
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  port: 11211
  service:
    labels: {}
    annotations: {}
    port: 11211

# ------------------------------------------------------------------------------
# OneGate server configuration
# ------------------------------------------------------------------------------

gate:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: ghcr.io/kvaps/opennebula-gate
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  port: 5030
  service:
    labels: {}
    annotations: {}
    port: 5030

  # OneGate should use different domain unlike sunstone
  ingress:
    enabled: true
    labels: {}
    annotations: {}
      #kubernetes.io/ingress.class: nginx
      #kubernetes.io/tls-acme: "true"
    hosts:
    - opennebula-gate.example.org
    tls:
    - secretName: opennebula-gate-tls
      hosts:
      - opennebula-gate.example.org

  configOverrides:
    :debug_level: 3

# ------------------------------------------------------------------------------
# OneFlow server configuration
# ------------------------------------------------------------------------------

flow:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: ghcr.io/kvaps/opennebula-flow
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
    - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  port: 2474
  service:
    labels: {}
    annotations: {}
    port: 2474

  configOverrides:
    :debug_level: 2

# ------------------------------------------------------------------------------
# OpenNebula exporter configuration
# ------------------------------------------------------------------------------

exporter:
  enabled: true
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraEnv: []
  sidecars: []
  extraVolumes: []
  extraVolumeMounts: []

  replicas: 1

  image:
    repository: ghcr.io/kvaps/opennebula-exporter
    tag: v5.12.0.4-1
    pullPolicy: IfNotPresent
    pullSecrets:
      - name: regsecret

  nodeSelector: {}
  tolerations: []
  podAntiAffinity: soft
  podAntiAffinityTopologyKey: kubernetes.io/hostname
  affinity: {}

  port: 9100
  telemetryPath: /metrics
  periodSeconds: 60
  service:
    labels: {}
    annotations: {}
    port: 9100

  serviceMonitor:
    enabled: false
    interval: 30s
    labels: {}
    annotations: {}
