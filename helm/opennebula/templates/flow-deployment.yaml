{{- if .Values.gate.enabled }}
{{- $fullName := include "opennebula.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-flow
  labels:
    app: {{ $fullName }}-flow
    {{- if .Values.flow.labels }}
    {{- toYaml .Values.flow.labels | nindent 4 }}
    {{- end }}
  {{- with .Values.flow.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .Values.gate.replicas }}
  selector:
    matchLabels:
      app: {{ $fullName }}-flow
  template:
    metadata:
      labels:
        app: {{ $fullName }}-flow
        {{- with .Values.flow.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/flow-configmap.yaml") . | sha256sum }}
        {{- with .Values.flow.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: oneflow
        image: {{ .Values.flow.image.repository }}:{{ .Values.flow.image.tag }}
        imagePullPolicy: {{ .Values.flow.image.pullPolicy }}
        command: [ "/usr/bin/ruby", "/usr/lib/one/oneflow/oneflow-server.rb" ]
        ports:
        - name: http
          containerPort: {{ .Values.flow.port }}
        {{- with .Values.flow.extraEnv }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        {{- with .Values.timezone }}
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
        {{- end }}
        - mountPath: /etc/one/oneflow-server.conf
          name: config
          subPath: oneflow-server.conf
        - mountPath: /var/lib/one/.one/oneflow_auth
          name: one-keys
          subPath: oneflow_auth
        {{- with .Values.flow.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.flow.sidecars }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if or .Values.flow.affinity .Values.flow.podAntiAffinity }}
      affinity:
        {{- with .Values.flow.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if eq .Values.flow.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ .Values.flow.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchLabels:
                  app: {{ $fullName }}-flow
        {{- else if eq .Values.flow.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ .Values.flow.podAntiAffinityTopologyKey }}"
                labelSelector:
                  matchLabels:
                    app: {{ $fullName }}-flow
        {{- end }}
      {{- end }}
      {{- with .Values.flow.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.flow.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.flow.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      securityContext:
        fsGroup: 9869
        runAsUser: 9869
      volumes:
      {{- with .Values.timezone }}
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/{{ . }}
          type: File
      {{- end }}
      - name: config
        configMap:
          name: {{ $fullName }}-flow
      - name: one-keys
        secret:
          secretName: {{ $fullName }}-one-keys
      {{- with .Values.flow.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
{{- end }}
