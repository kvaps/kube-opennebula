{{- if .Values.memcached.enabled }}
{{- $fullName := include "opennebula.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-memcached
  labels:
    app: {{ $fullName }}-memcached
    {{- if .Values.memcached.labels }}
    {{- toYaml .Values.memcached.labels | nindent 4 }}
    {{- end }}
  {{- with .Values.memcached.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .Values.memcached.replicas }}
  selector:
    matchLabels:
      app: {{ $fullName }}-memcached
  template:
    metadata:
      labels:
        app: {{ $fullName }}-memcached
        {{- with .Values.memcached.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.memcached.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

    spec:
      containers:
      - name: memcached
        image: {{ .Values.memcached.image.repository }}:{{ .Values.memcached.image.tag }}
        args: [ '-p', '{{ .Values.memcached.port }}' ]
        imagePullPolicy: {{ .Values.memcached.image.pullPolicy }}
        ports:
        - name: memcached
          containerPort: {{ .Values.memcached.port }}
        {{- with .Values.memcached.extraEnv }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if (or .Values.timezone .Values.memcached.extraVolumeMounts) }}
        volumeMounts:
        {{- with .Values.timezone }}
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
        {{- end }}
        {{- with .Values.memcached.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
      {{- with .Values.memcached.sidecars }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if or .Values.memcached.affinity .Values.memcached.podAntiAffinity }}
      affinity:
        {{- with .Values.memcached.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if eq .Values.memcached.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ .Values.memcached.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchLabels:
                  app: {{ $fullName }}-memcached
        {{- else if eq .Values.memcached.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ .Values.memcached.podAntiAffinityTopologyKey }}"
                labelSelector:
                  matchLabels:
                    app: {{ $fullName }}-memcached
        {{- end }}
      {{- end }}
      {{- with .Values.memcached.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.memcached.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.memcached.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      securityContext:
        fsGroup: 9869
        runAsUser: 9869
      {{- if (or .Values.timezone .Values.memcached.extraVolumes) }}
      volumes:
      {{- with .Values.timezone }}
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/{{ . }}
          type: File
      {{- end }}
      {{- with .Values.memcached.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
{{- end }}
