{{- if .Values.novnc.enabled }}
{{- $fullName := include "opennebula.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-novnc
  labels:
    app: {{ $fullName }}-novnc
    {{- if .Values.novnc.labels }}
    {{- toYaml .Values.novnc.labels | nindent 4 }}
    {{- end }}
  {{- with .Values.novnc.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .Values.novnc.replicas }}
  selector:
    matchLabels:
      app: {{ $fullName }}-novnc
  template:
    metadata:
      labels:
        app: {{ $fullName }}-novnc
        {{- with .Values.novnc.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/novnc-configmap.yaml") . | sha256sum }}
        {{- with .Values.novnc.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: novnc
        image: {{ .Values.novnc.image.repository }}:{{ .Values.novnc.image.tag }}
        imagePullPolicy: {{ .Values.novnc.image.pullPolicy }}
        command: [ '/usr/bin/ruby', '/usr/bin/novnc-server', 'start' ]
        ports:
        - name: websocket
          containerPort: {{ .Values.novnc.port }}
        {{- with .Values.novnc.extraEnv }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        {{- with .Values.timezone }}
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
        {{- end }}
        - name: config
          mountPath: /etc/one/sunstone-server.conf
          subPath: sunstone-server.conf
        - name: shared
          mountPath: /var/lib/one/sunstone_vnc_tokens
          subPath: sunstone_vnc_tokens
        {{- with .Values.novnc.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.novnc.sidecars }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if or .Values.novnc.affinity .Values.novnc.podAntiAffinity }}
      affinity:
        {{- with .Values.novnc.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if eq .Values.novnc.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ .Values.novnc.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchLabels:
                  app: {{ $fullName }}-novnc
        {{- else if eq .Values.novnc.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ .Values.novnc.podAntiAffinityTopologyKey }}"
                labelSelector:
                  matchLabels:
                    app: {{ $fullName }}-novnc
        {{- end }}
      {{- end }}
      {{- with .Values.novnc.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.novnc.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.novnc.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      securityContext:
        fsGroup: 9869
        runAsUser: 9869
      volumes:
      {{- with .Values.timezone }}
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/{{ . }}
          type: File
      {{- end }}
      - name: config
        configMap:
          name: {{ $fullName }}-novnc
      - name: shared
        {{- if .Values.persistence.shared.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.shared.existingClaim }}
          claimName: {{ .Values.persistence.shared.existingClaim }}
          {{- else }}
          claimName: {{ $fullName }}-shared
          {{- end }}
        {{- else }}
        emptyDir:
        {{- end }}
      {{- with .Values.novnc.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
{{- end }}
